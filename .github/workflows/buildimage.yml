name: Build ACEest Fitness and Gym application

on:
  push:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history for tagging

      - name: Build and Test Docker Image
        id: build_test
        run: |
          # Build a temporary test image
          docker build -t fitness-tracker-test .

          # Run the tests. If this command fails, the job will stop here.
          docker run fitness-tracker-test

      - name: Get next version number
        id: get_version
        if: success()
        run: |
          # Get the current number of tags, which will be our next version
          # This is a very simple way to generate versions (e.g., v1, v2, v3...)
          VERSION_NUMBER=$(git tag | wc -l)
          NEXT_VERSION="v$((VERSION_NUMBER + 1))"
          echo "Next version: $NEXT_VERSION"
          echo "::set-output name=tag::${NEXT_VERSION}"

      - name: Tag the Git repository
        if: success()
        run: |
          GIT_TAG=${{ steps.get_version.outputs.tag }}
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag $GIT_TAG
          git push origin $GIT_TAG

      - name: Log in to Docker Hub
        if: success()
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        if: success()
        run: |
          IMAGE_TAG=${{ steps.get_version.outputs.tag }}
          # The final image build, now with the generated tag
          docker build -t your_dockerhub_username/fitness-tracker:$IMAGE_TAG .
          docker push your_dockerhub_username/fitness-tracker:$IMAGE_TAG
