name: Build ACEest Fitness and Gym application

on:
  push:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    permissions:
      contents: write # To create git tags

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build and Test Docker Image
        # This will fail if the tests fail, preventing subsequent steps
        run: |
          docker build --target builder -t fitness-tracker-test:latest .
          docker run fitness-tracker-test:latest

      - name: Get next version number
        id: get_version
        if: success()
        run: |
          VERSION_NUMBER=$(git tag | wc -l)
          NEXT_VERSION="v$((VERSION_NUMBER + 1))"
          echo "::set-output name=tag::${NEXT_VERSION}"

      - name: Tag the Git repository
        if: success()
        run: |
          GIT_TAG=${{ steps.get_version.outputs.tag }}
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag $GIT_TAG
          git push origin $GIT_TAG

      - name: Log in to Docker Hub
        if: success()
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Final Docker Image
        if: success()
        run: |
          IMAGE_TAG=${{ steps.get_version.outputs.tag }}
          # This command builds the final, small production image
          # It uses the default target of the Dockerfile (stage-1)
          docker build -t your_dockerhub_username/fitness-tracker:$IMAGE_TAG .
          docker push your_dockerhub_username/fitness-tracker:$IMAGE_TAG
